-- if you have a big numbers and you want to make it small like in this problem  "https://codeforces.com/gym/102961/problem/E"

code 


#include<bits/stdc++.h>
#define ll long long
#include <iostream>
using namespace std;
#define int ll




const int N = 4e5 + 10;
int freq[N];

void out() {
    int n;cin>>n;
    n *=2;
    int a[n];
    vector<int>temp(n);
    for (int i = 0; i < n; ++i) {
        cin>>a[i];
        temp[i] = a[i];
    }
    std::sort(temp.begin(), temp.end());
    temp.erase(unique(temp.begin(),temp.end()),temp.end());
    for(int i=1;i<n;i+=2){
        int x = a[i-1],y = a[i];
        int smallX = lower_bound(temp.begin(),temp.end(),x) - temp.begin();
        int smallY = lower_bound(temp.begin(),temp.end(),y) - temp.begin();
        freq[smallX]++;
        freq[smallY+1]--;
    }
    for (int i = 1; i < N; ++i) {
        freq[i]+= freq[i-1];
    }
    int mx = -1;
    for (int i = 0; i < N; ++i) {
        mx = max(mx,freq[i]);
    }
    cout<<mx;


}

signed main() {
    cin.tie(0);
    cin.sync_with_stdio(0);
    int testCase = 1;
//    cin >> testCase;
    while (testCase--) {
        out();
        cout << "\n";
    }
    return 0;
}
